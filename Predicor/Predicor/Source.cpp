// Это главный файл. 

/* Эта программа принимает в себя время (Solves[999999]), за которое ты собрал головоломку
и среднее время за 5, 12, 50 и 100 (Average5, Average12, Average50, Average100) сборок
и предсказывает влияние последней сборки на среднее время (по avg5, avg12, avg50 и avg100) (обнвится ли рекорд по среднему времени).
   Варианты влияния: можно гарантированно обновить среднее время (по avg5, avg12, avg50 и avg100);
                     можно обновить при условии что последня сборка будет меньше определённого времени (меньше FinalSolve);
                     среднее время не обновится.
          среднее время из 5-ти сборок считается так:
     (сумма этих сборок - максимальная сборка (по времени) - минимальная сборка (по времени)) / 3;
          среднее время из 12-ти сборок считается так:
     (сумма этих сборок - максимальная сборка (по времени) - минимальная сборка (по времени)) / 10;
          среднее время из 50-ти сборок считается так:
     (сумма этих сборок - три максимальнык сборок (по времени) - три минимальных сборок (по времени)) / 44;
          среднее время из 100-а сборок считается так:
     (сумма этих сборок - пять максимальных сборок (по времени) - пять минимальных сборок (по времени)) / 90.
     сначала программа проверяет условие для гарантированного обновления рекорда по среднему времени
          Чтобы гарантированно обновился рекорд по среднему времени из 5-ти сборок, должно выполняться условие:
     (сумма 4-ёх сборок - минимальная сборка (среди 4-ёх)) < (3 * среднее время из 5-ти сборок).
          Чтобы гарантированно обновился рекорд по среднему времени из 12-ти сборок, должно выполняться условие:
     (сумма 11-ти сборок - минимальная сборка (среди 11-ти)) < (10 * среднее время из 12-ти сборок).
          Чтобы гарантированно обновился рекорд по среднему времени из 50-ти сборок, должно выполняться условие:
     (сумма 49-ти сборок - две максимальные сборки (среди 49-ти) - три минимальные сборки (среди 49-ти)) < (44 * среднее время из 50-ти сборок).
          Чтобы гарантированно обновился рекорд по среднему времени из 100-а сборок, должно выполняться условие:
     (сумма 99-ти сборок - четыре максимальные сборки (среди 99-ти) - пять минимальных сборок (среди 99-ти)) < (90 * среднее время из 100-а сборок).
     если условие для гарантированного обновления рекорда по среднему времени не выполняется,
     то программа проверяет условие случая, когда рекорд не обнавляется.
          Чтобы рекорд не обновился по среднему времени из 5-ти сборок, должно выполняться условие:
     (сумма 4-ёх сборок - максимальная сборка (среди 4-ёх)) >= (3 * среднее время из 5-ти сборок).
          Чтобы рекорд не обновился по среднему времени из 12-ти сборок, должно выполняться условие:
     (сумма 11-ти сборок - максимальная сборка (среди 11-ти)) >= (10 * среднее время из 12-ти сборок).
          Чтобы рекорд не обновился по среднему времени из 50-ти сборок, должно выполняться условие:
     (сумма 49-ти сборок - три максимальные сборки (среди 49-ти) - две минимальные сборки (среди 49-ти)) >= (44 * среднее время из 50-ти сборок).
          Чтобы рекорд не обновился по среднему времени из 100-а сборок, должно выполняться условие:
     (сумма 99-ти сборок - пять максимальных сборок (среди 99-ти) - четыре минимальные сборки (среди 99-ти)) >= (90 * среднее время из 100-а сборок).

     если условие для случая, когда рекорд не обнавляется не выполняется,
     то программа выводит время (FinalSolve) быстрее которого нужно собрать головоломку,
     чтобы обновить рекорд по среднему времени.
     FinalSolve для 5-ти сборок = 3 * среднее время для 5-ти сборок - сумма 4-ёх сборок + максимальная сборка (среди 4-ёх) + минимальная сборка (среди 4-ёх).
     FinalSolve для 12-ти сборок = 10 * среднее время для 12-ти сборок - сумма 11-ти сборок + максимальная сборка (среди 11-ти) + минимальная сборка (среди 11-ти).
     FinalSolve для 50-ти сборок = 44 * среднее время для 50-ти сборок - сумма 49-ти сборок + три мксимальные сборки (среди 49-ти) + три минимальные сборки (среди 49-ти).
     FinalSolve для 100-а сборок = 90 * среднее время для 100-а сборок - сумма 99-ти сборок + пять максимальных сборок (среди 99-ти) + пять максимальных сборок (среди 99-ти).
*/

#include "Header.h"
using namespace std;

int main()
{
    setlocale(LC_ALL, "Russian");

    InputAverages(); // Ввод среднеего времени для 5-ти, 12-ти, 50-ти и 100-а сборок.

    Input(); // Ввод сборок и вывод предсказания веса для 5-ой (12-ой, 50-ой, 100-ой) сборки
}